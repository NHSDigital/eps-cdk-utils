name: docker image upload

on:
  workflow_call:
    inputs:
      VERSION_NUMBER:
        required: true
        type: string
      COMMIT_ID:
        required: true
        type: string
      AWS_ENVIRONMENT:
        required: true
        type: string
      TAG_LATEST:
        required: true
        type: boolean
    secrets:
      CDK_PUSH_IMAGE_ROLE:
        required: true
  
jobs:
  upload_docker_image:
    runs-on: ubuntu-latest
    environment: ${{ inputs.AWS_ENVIRONMENT }}
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout local github actions
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}
          fetch-depth: 0
          sparse-checkout: |
            .github

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.CDK_PUSH_IMAGE_ROLE }}
          role-session-name: upload-cdk-utils-build

      - name: docker_artifact download
        uses: actions/download-artifact@v4
        with:
          name: docker_artifact
          path: .

      - name: Extract cdk-utils-build docker image
        id: extract-cdk-utils-build-image
        run: |
          docker load -i cdk-utils-build.img

      - name: Retrieve AWS Account ID
        id: retrieve-account-id
        run: echo "ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> "$GITHUB_ENV"
       
      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin ${{ env.ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com

      - name: Push cdk-utils-build to Amazon ECR
        run: |
          docker tag "cdk-utils-build:${{ inputs.VERSION_NUMBER }}" "${{ env.ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/cdk-utils-build-repo:${{ inputs.VERSION_NUMBER }}"
          docker push "${{ env.ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/cdk-utils-build-repo:${{ inputs.VERSION_NUMBER }}"

      - name: Push cdk-utils-build to Amazon ECR
        if: ${{ inputs.TAG_LATEST == 'true' }}
        run: |
          docker tag "cdk-utils-build:${{ inputs.VERSION_NUMBER }}" "${{ env.ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/cdk-utils-build-repo:latest"
          docker push "${{ env.ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/cdk-utils-build-repo:latest"
    
      - name: Check cdk-utils-build scan results
        env:
          REPOSITORY_NAME: cdk-utils-build-repo
          IMAGE_TAG: ${{ inputs.VERSION_NUMBER }}
        working-directory: .github/scripts
        run: |
          ./check_ecr_image_scan_results.sh
